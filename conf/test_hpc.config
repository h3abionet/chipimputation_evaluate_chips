/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/methylseq -profile test
 */

params {
  project_name            = 'test_run'
  project_description     = 'A simple imputation run on chrm 6 distributed with git repo'
  homedir                 = "${HOME}/imputation" // homedir: Path to your script, where the nextflow main script is located
  scripts                 = "${params.homedir}/scripts" // Scripts directory
  outDir                  = "/scratch/mamana/evaluate_chip/output/${project_name}" // outDir: where to put all pipeline's outputs
  workDir                 = "/scratch/mamana/evaluate_chip/work" // wordDir: Nextflow working directory
  scratch                 = "/scratch/mamana/evaluate_chip/"
  help                    = false
  max_memory = 2.GB
  max_cpus = 2
  max_time = 48.h

  // Reference panels
  ref_panels {
    testRefPanel {
      // Per chromosomes
      m3vcfFile   = "/scratch/mamana/reference/test_data/qc_three_samples/H3AFRICAv1/testdata/refPanel_testdata_%s_phased.m3vcf.gz"
      vcfFile     = "/scratch/mamana/reference/test_data/qc_three_samples/H3AFRICAv1/testdata/refPanel_testdata_%s_phased.vcf.gz"
      sampleFile  = "/scratch/mamana/reference/REF_PANELS/H3AR3a/H3A.sample"
    }
//    testRefPanel1 {
//      // Per chromosomes
//      m3vcfFile   = "/scratch/mamana/reference/REF_PANELS/H3AR3a/m3vcf/H3AR3a.%s.phased.min.m3vcf.gz"
//      vcfFile     = "/scratch/mamana/reference/REF_PANELS/H3AR3a/vcf/H3AR3a.phased.min.%s.vcf.gz"
//      sampleFile  = "/scratch/mamana/reference/REF_PANELS/H3AR3a/H3A.sample"
//    }
  }

//  target_pops{ // where to extract datasets from ref panels
//    ref_panels_ext_pops = "YRI,LWK"
//  }

  // Study datasets
//  target_pops{ // datasets to extract from reference panels
//    YRI = "YRI"
//    LWK = "LWK"
//  }
  target_datasets { // datasets extracted already, all chromosomes in one
    threesamples   = "/scratch/mamana/reference/test_data/qc_three_samples/H3AFRICAv1/testdata/target_testdata.vcf.gz"
//    threesamples   = "/scratch/mamana/reference/test_data/qc_three_samples/H3AFRICAv1/VCF/threesamples.unphased.21-22_H3AFRICAv1_qc_three_samples.vcf.gz"
//    testStudy1   = "/scratch/mamana/reference/test_data/qc_three_samples/H3AFRICAv1/VCF/threesamples.unphased.21_H3AFRICAv1_qc_three_samples.vcf.gz"
  }

  tag_dir                             = "/scratch/mamana/reference/TAGS"
  tagSNPs_files{
//    MEGAv2                          = "${tag_dir}/MEGA_Consortium_v2/MEGA_Consortium_v2_15070954_A2.csv_chr_pos_all_chrm"
//    HumanOmni25                     = "${tag_dir}/HumanOmni2-5/HumanOmni2-5-8-v1-0-D.csv_chr_pos_all_chrm"
//    AxiomGWPanAFRna35               = "${tag_dir}/Axiom_GW_PanAFR_na35/Axiom_GW_PanAFR.na35.annot.csv_chr_pos_all_chrm"
//        R7final                         = "${tag_dir}/R7-final/R7-final.srt_chr%s.csv"
    H3AFRICAv1                      = "${tag_dir}/H3Africa_2017_20021485_A2_v1/H3Africa_2017_20021485_A2_v1.csv_chr_pos_all_chrm"
//    MEGA_EX                         = "${tag_dir}/MEGA-EX/Multi-EthnicGlobal_D1.csv_chr_pos_all_chrm"
//    infinium_global_arrayv2         = "${tag_dir}/infinium-global-screening-array-24-v2/GSA-24v2-0_A1.csv_Physical-and-Genetic-Coordinates.csv_chr_pos_all_chrm"
    infinium_psycharrayv1           = "${tag_dir}/infinium-psycharray-24-v1-3-a1/InfiniumPsychArray-24v1-3_A1_final.csv_chr_pos_all_chrm"
  }

  // Genetic map for eagle2
  eagle_genetic_map = "/scratch/mamana/reference/eagle/tables/genetic_map_hg19_withX.txt.gz"

  // Reference genome used for QC
//  reference_genome        = "/scratch/mamana/reference/gatk_bundle/human_g1k_v37_decoy.fasta"
  reference_genome        = "/scratch/mamana/reference/test_data/qc_three_samples/H3AFRICAv1/testdata/hg19_testdata.fasta"

  // Use ALL or '' to use all available chromosome in the target dataset
  chromosomes = "ALL"

  // imputation parameters
  NE = "20000"
  impute_iter = "10"
  impute_burnin = "2" // must be less than impute_burnin
  impute_info_cutoff = "0.3"
  chunk_size = "20000000" // in base
  buffer_size = "1000000" // in base

  // Plink QC parameters
  cut_mind                = "0.05"

  // Phasing method: shapeit (default) or eagle2
  phasing_method          = "eagle"

  // Imputation method minimac4 (default) or IMPUTE2
  impute_method           = "minimac4"

  // Minimac4 option
  minRatio = '0.1'

  // Phasing method: eagle2 (default) or shapeit
  phasing_method          = "eagle"

  // Plink to use, sometimes it can be plink2
  plink="plink2"

}

timeline {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_timeline.html"
}
report {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_report.html"
}
trace {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_trace.txt"
}
dag {
  enabled = true
  file = "${params.outDir}/nextflow_reports/${params.project_name}_h3achipimputation_dag.png"
}

process {
// Process-specific resource requirements
  withLabel: 'medium' {
    errorStrategy  = { if (task.exitStatus in [143, 137, 255]) { 'retry' } else { 'terminate' } }
      memory = 1.GB
  }
  withLabel : 'bigmem' {
    errorStrategy  = { if (task.exitStatus in [143, 137, 255]) { 'retry' } else { 'terminate' } }
    memory = 1.GB
  }
}

profiles{
  singularity {
    singularity.runOptions = " -B ${params.scratch} -B /scratch/mamana/reference" // add any paths that need   to be mounted here
  }
  slurm {
    queueSize = 10
  }
  test {
    queueSize = 10
  }
}