/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/methylseq -profile test
 */

params {
  project_name            = 'refimpute'
  project_description     = 'A simple imputation run on chrm 6 distributed with git repo'
  homedir                 = "${HOME}/imputation" // homedir: Path to your script, where the nextflow main script is located
  outdir                  = "/cbio/projects/001/clients/${project_name}/data" // outDir: where to put all pipeline's outputs
  workdir                 = "/scratch3/users/mamana/${project_name}/work" // wordDir: Nextflow working directory
  scratch                 = "/scratch3/users/mamana/${project_name}/"
  help                    = false
  max_memory = 2.GB
  max_cpus = 2
  max_time = 48.h


  // Reference panels
  ref_panels = [
     ["H3AR6x", "/cbio/dbs/refpanels/H3AR6x/m3vcfs/H3AR6x_%s_phased.m3vcf.gz", "/cbio/dbs/refpanels/H3AR6x/bcfs/H3AR6x_%s_phased.bcf","/cbio/dbs/refpanels/H3AR4a/metadata/all.v4.meta.updated"],
  ]
  
  // datasets extracted already, all chromosomes in one [name, vcf_file]
  vcf_files = [ 
    // ['awigen_ref_qc_b38', "/cbio/projects/001/clients/refimpute/data/awigen_qc_sort.hg38_final.vcf.gz"],
    ['awigen_500', "/cbio/projects/001/clients/refimpute/data/awigen_500.vcf.gz"],
    ['awigen_1000', "/cbio/projects/001/clients/refimpute/data/awigen_1000.vcf.gz"],
    ['awigen_2000', "/cbio/projects/001/clients/refimpute/data/awigen_2000.vcf.gz"],
    ['awigen_4000', "/cbio/projects/001/clients/refimpute/data/awigen_4000.vcf.gz"],
    ['awigen_7000', "/cbio/projects/001/clients/refimpute/data/awigen_7000.vcf.gz"],
    ['awigen_100wgs', "/cbio/projects/001/clients/refimpute/data/awigen_wgs/awigen_recal-SNP_recal-INDEL_filter-pass.vcf.gz"],
    ['ggvp_wgs', "/cbio/projects/001/clients/refimpute/data/GGVP/ggvp_downsized_final.vcf.gz"],
    ['ssmp_wgs', '/cbio/projects/001/clients/refimpute/data/SSMP/SSMP-autosomal.vcf.gz']
  ]

  map_files = [
    ["H3AFRICAv1_qc_awigen", "/cbio/projects/001/clients/refimpute/data/awigen-qc.bim.pos"],
    ["axiom", "/cbio/projects/001/clients/refimpute/data/chips/axiom.pos"],
    ["mega", "/cbio/projects/001/clients/refimpute/data/chips/mega.pos"],
    ["omni", "/cbio/projects/001/clients/refimpute/data/chips/omni.pos"],
  ]

  // Genome build
  genome_build = "b37"
  
  // Genetic map for eagle2
  // eagle_genetic_map = "/cbio/dbs/eagle2/genetic_map_hg38_withX.txt.gz"
  // eagle_genetic_map = "/cbio/dbs/refpanels/eagle/tables/genetic_map_hg19_withX.txt.gz"

  chain_file = "/cbio/users/mamana/reference/liftover/GRCh37/GRCh37_to_GRCh38.chain.gz"

  // Reference genome used for QC
  reference_genome = "/cbio/dbs/gatk/hg38/Homo_sapiens_assembly38.fasta"
  // reference_genome = "/cbio/users/mamana/reference/gatk_bundle/human_g1k_v37_decoy.fasta"

  //// chromosome mapping for liftover one by ine 1 chr1\n 2 chr2
  chromosome_mapping = "/cbio/users/mamana/reference/chromosome_mapping_b37_b38.txt"


  // Use ALL or '' to use all available chromosome in the target dataset
  // chromosomes = "chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22"
  // chromosomes = "chr22"

  // imputation parameters
  chunk_size = "25000000" // in base
  buffer_size = "500000" // in base

  // QC parameters
  site_miss                = "0.05"
  hwe			  = "0.00001"
  mac			  = "1"
  info_cutoff      = '0.6'
  min_ac = '2'
  min_alleles = '2'
  max_alleles = '2'

  // Phasing method: shapeit (default) or eagle2
  phasing_method          = "eagle"

  // Imputation method minimac4 (default) or IMPUTE2
  impute_method           = "minimac4"

  // Minimac4 option
  minRatio = '0.001'

  // Phasing method: eagle2 (default) or shapeit
  phasing_method          = "eagle"

  // Plink to use, sometimes it can be plink2
  plink="plink2"

}


timeline {
  enabled = true
  file = "${params.outdir}/nextflow_reports/${params.project_name}_h3achipimputation_timeline.html"
}
report {
  enabled = true
  file = "${params.outdir}/nextflow_reports/${params.project_name}_h3achipimputation_report.html"
}
trace {
  enabled = true
  file = "${params.outdir}/nextflow_reports/${params.project_name}_h3achipimputation_trace.txt"
}
// dag {
//   enabled = true
//   file = "${params.outdir}/nextflow_reports/${params.project_name}_h3achipimputation_dag.pdf"
// }

process {
// Process-specific resource requirements
  withLabel: 'crossmap' {
    errorStrategy  = { if (task.exitStatus in [143, 137, 255]) { 'retry' } else { 'terminate' } }
    memory = 5.GB
    cpus = 1
    container = 'docker://quay.io/mypandos/crossmap:latest'
  }
  withLabel : 'bcftools' {
    errorStrategy  = { if (task.exitStatus in [143, 137, 255]) { 'retry' } else { 'terminate' } }
    cpus = 2
    memory = 50.GB
    container = 'docker://quay.io/mypandos/bcftools'
  }

  withLabel : 'large' {
    errorStrategy  = { if (task.exitStatus in [143, 137, 255]) { 'retry' } else { 'terminate' } }
    cpus = { 2 * task.attempt }
    memory = 50.GB
  }

  withLabel : 'verylarge' {
    errorStrategy  = { if (task.exitStatus in [143, 137, 255]) { 'retry' } else { 'terminate' } }
    cpus = { 3 * task.attempt }
    memory = 50.GB
    maxForks  = 70
  }

}

profiles{
  singularity {
    singularity.enabled = true
    singularity.autoMounts = true
    singularity.cacheDir = "/cbio/users/mamana/singularity-containers"
    process.container = 'docker://quay.io/mypandos/crossmap:latest'
    singularity.runOptions = " -B ${params.scratch} -B /cbio/users/mamana " // add any paths that need   to be mounted here
  }
  slurm {
    executor{
            queueSize = 100
    }
    process{
        executor        = 'slurm'
        queue           = 'Main'
        memory          = { 30.GB * task.attempt }
        cpus            = 2 
        time            = { 72.h * task.attempt }
        maxForks        = 70
        stageOutMode = 'rsync'
        maxRetries      = 0
        errorStrategy   = 'retry'
        clusterOptions  = { "--mail-user=mbymam001@myuct.ac.za" }
    }
  }
}
